{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew\\\\Desktop\\\\FEWD-Lab7-master\\\\src\\\\components\\\\FetchNutrition.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Nutrition from \"./Nutrition\";\nimport BarChart from \"./NutritionChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchData = _ref => {\n  _s();\n\n  let {\n    query\n  } = _ref;\n  const [nutrition, setNutrition] = useState({\n    sugar_g: 0,\n    fiber_g: 0,\n    serving_size_g: 0,\n    sodium_mg: 0,\n    name: 0,\n    potassium_mg: 0,\n    fat_saturated_g: 0,\n    fat_total_g: 0,\n    calories: 0,\n    cholesterol_mg: 0,\n    protein_g: 0,\n    carbohydrates_total_g: 0\n  });\n  const [chartData, setChartData] = useState({\n    labels: [\"sugar\", \"fiber\", \"saturated fat\", \"total fat\", \"protein\"],\n    datasets: [{\n      label: \"per serving in g\",\n      data: [0, 0, 0, 0, 0],\n      backgroundColor: [\"#ffbb11\", \"#ec02f1\", \"#50AF95\", \"#03ba6f\", \"#2a71d0\"]\n    }]\n  });\n  const fetchData = useCallback(() => {\n    const url = \"https://calorieninjas.p.rapidapi.com/v1/nutrition?query=\" + query;\n    console.log(url);\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Key\": \"59a1ed6959mshd3995aae4929d99p14e246jsnd8b7b3daa451\",\n        \"X-RapidAPI-Host\": \"calorieninjas.p.rapidapi.com\"\n      }\n    };\n    fetch(url, options).then(response => response.json()).then(incomingData => {\n      console.log(incomingData);\n      if (incomingData.items.length !== 0) setNutrition(incomingData.items[0]);\n      let filteredData = [incomingData.items[0].sugar_g, incomingData.items[0].fiber_g, incomingData.items[0].fat_saturated_g, incomingData.items[0].fat_total_g, incomingData.items[0].protein_g];\n      let filteredLabels = [\"sugar\", \"fiber\", \"saturated fat\", \"total fat\", \"protein\"];\n      setChartData({\n        labels: filteredLabels,\n        datasets: [{\n          label: \"per serving of \" + incomingData.items[0].name + \" in g\",\n          data: filteredData,\n          backgroundColor: [\"#ffbb11\", \"#ec02f1\", \"#50AF95\", \"#03ba6f\", \"#2a71d0\"]\n        }]\n      });\n    }).catch(err => console.error(err));\n  }, [query]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nutrition, {\n      item: nutrition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchData, \"pC1mQZOGdNyXhMSv12zofieMkSg=\");\n\n_c = FetchData;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Nutrition","BarChart","FetchData","query","nutrition","setNutrition","sugar_g","fiber_g","serving_size_g","sodium_mg","name","potassium_mg","fat_saturated_g","fat_total_g","calories","cholesterol_mg","protein_g","carbohydrates_total_g","chartData","setChartData","labels","datasets","label","data","backgroundColor","fetchData","url","console","log","options","method","headers","fetch","then","response","json","incomingData","items","length","filteredData","filteredLabels","catch","err","error"],"sources":["C:/Users/Matthew/Desktop/FEWD-Lab7-master/src/components/FetchNutrition.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Nutrition from \"./Nutrition\";\nimport BarChart from \"./NutritionChart\";\n\n\nconst FetchData = ({ query }) => {\n  const [nutrition, setNutrition] = useState({\n    sugar_g: 0,\n    fiber_g: 0,\n    serving_size_g: 0,\n    sodium_mg: 0,\n    name: 0,\n    potassium_mg: 0,\n    fat_saturated_g: 0,\n    fat_total_g: 0,\n    calories: 0,\n    cholesterol_mg: 0,\n    protein_g: 0,\n    carbohydrates_total_g: 0,\n  });\n  const [chartData, setChartData] = useState({\n    labels: [\"sugar\", \"fiber\",\"saturated fat\",\"total fat\",\"protein\"],\n    datasets: [\n      {\n        label: \"per serving in g\", \n        data: [0,0,0,0,0],\n        backgroundColor: [\"#ffbb11\",\"#ec02f1\",\"#50AF95\",\"#03ba6f\",\"#2a71d0\"],\n      },\n    ],\n  \n});\n\n  const fetchData = useCallback(() => {\n    const url =\n      \"https://calorieninjas.p.rapidapi.com/v1/nutrition?query=\" + query;\n    console.log(url);\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Key\": \"59a1ed6959mshd3995aae4929d99p14e246jsnd8b7b3daa451\",\n        \"X-RapidAPI-Host\": \"calorieninjas.p.rapidapi.com\",\n      },\n    };\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((incomingData) => {\n        console.log(incomingData);\n        if (incomingData.items.length !== 0)\n          setNutrition(incomingData.items[0]);\n          let filteredData = [\n            incomingData.items[0].sugar_g,\n            incomingData.items[0].fiber_g,\n            incomingData.items[0].fat_saturated_g,\n            incomingData.items[0].fat_total_g,\n            incomingData.items[0].protein_g,\n          ];\n          let filteredLabels = [\n            \"sugar\",\n            \"fiber\",\n            \"saturated fat\",\n            \"total fat\",\n            \"protein\",\n          ];\n          setChartData({\n            labels: filteredLabels,\n            datasets: [\n              {\n                label: \"per serving of \" + incomingData.items[0].name + \" in g\",\n                data: filteredData,\n                backgroundColor: [\n                  \"#ffbb11\",\n                  \"#ec02f1\",\n                  \"#50AF95\",\n                  \"#03ba6f\",\n                  \"#2a71d0\",\n                ],\n              },\n            ],\n          });\n      })\n      .catch((err) => console.error(err));\n  }, [query]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, query]);\n\n  return (\n    <div>\n      <Nutrition item={nutrition} />\n      <BarChart data={chartData}/>\n    </div>\n  );\n};\nexport default FetchData;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AAGA,MAAMC,SAAS,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC/B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;IACzCQ,OAAO,EAAE,CADgC;IAEzCC,OAAO,EAAE,CAFgC;IAGzCC,cAAc,EAAE,CAHyB;IAIzCC,SAAS,EAAE,CAJ8B;IAKzCC,IAAI,EAAE,CALmC;IAMzCC,YAAY,EAAE,CAN2B;IAOzCC,eAAe,EAAE,CAPwB;IAQzCC,WAAW,EAAE,CAR4B;IASzCC,QAAQ,EAAE,CAT+B;IAUzCC,cAAc,EAAE,CAVyB;IAWzCC,SAAS,EAAE,CAX8B;IAYzCC,qBAAqB,EAAE;EAZkB,CAAD,CAA1C;EAcA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC;IACzCsB,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAkB,eAAlB,EAAkC,WAAlC,EAA8C,SAA9C,CADiC;IAEzCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBADT;MAEEC,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAFR;MAGEC,eAAe,EAAE,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC;IAHnB,CADQ;EAF+B,CAAD,CAA1C;EAYA,MAAMC,SAAS,GAAG1B,WAAW,CAAC,MAAM;IAClC,MAAM2B,GAAG,GACP,6DAA6DvB,KAD/D;IAEAwB,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACA,MAAMG,OAAO,GAAG;MACdC,MAAM,EAAE,KADM;MAEdC,OAAO,EAAE;QACP,kBAAkB,oDADX;QAEP,mBAAmB;MAFZ;IAFK,CAAhB;IAOAC,KAAK,CAACN,GAAD,EAAMG,OAAN,CAAL,CACGI,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,YAAD,IAAkB;MACtBT,OAAO,CAACC,GAAR,CAAYQ,YAAZ;MACA,IAAIA,YAAY,CAACC,KAAb,CAAmBC,MAAnB,KAA8B,CAAlC,EACEjC,YAAY,CAAC+B,YAAY,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAZ;MACA,IAAIE,YAAY,GAAG,CACjBH,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsB/B,OADL,EAEjB8B,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsB9B,OAFL,EAGjB6B,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsBzB,eAHL,EAIjBwB,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsBxB,WAJL,EAKjBuB,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsBrB,SALL,CAAnB;MAOA,IAAIwB,cAAc,GAAG,CACnB,OADmB,EAEnB,OAFmB,EAGnB,eAHmB,EAInB,WAJmB,EAKnB,SALmB,CAArB;MAOArB,YAAY,CAAC;QACXC,MAAM,EAAEoB,cADG;QAEXnB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,oBAAoBc,YAAY,CAACC,KAAb,CAAmB,CAAnB,EAAsB3B,IAA1C,GAAiD,OAD1D;UAEEa,IAAI,EAAEgB,YAFR;UAGEf,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe;QAHnB,CADQ;MAFC,CAAD,CAAZ;IAgBH,CApCH,EAqCGiB,KArCH,CAqCUC,GAAD,IAASf,OAAO,CAACgB,KAAR,CAAcD,GAAd,CArClB;EAsCD,CAjD4B,EAiD1B,CAACvC,KAAD,CAjD0B,CAA7B;EAmDAN,SAAS,CAAC,MAAM;IACd4B,SAAS;EACV,CAFQ,EAEN,CAACA,SAAD,EAAYtB,KAAZ,CAFM,CAAT;EAIA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAW,IAAI,EAAEC;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,IAAI,EAAEc;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAxFD;;GAAMhB,S;;KAAAA,S;AAyFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}